// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"
)

// GetEntryOKCode is the HTTP code returned for type GetEntryOK
const GetEntryOKCode int = 200

/*GetEntryOK OK

swagger:response getEntryOK
*/
type GetEntryOK struct {

	/*
	  In: Body
	*/
	Payload *GetEntryOKBody `json:"body,omitempty"`
}

// NewGetEntryOK creates GetEntryOK with default headers values
func NewGetEntryOK() *GetEntryOK {

	return &GetEntryOK{}
}

// WithPayload adds the payload to the get entry o k response
func (o *GetEntryOK) WithPayload(payload *GetEntryOKBody) *GetEntryOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get entry o k response
func (o *GetEntryOK) SetPayload(payload *GetEntryOKBody) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetEntryOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

/*GetEntryDefault error

swagger:response getEntryDefault
*/
type GetEntryDefault struct {
	_statusCode int

	/*
	  In: Body
	*/
	Payload *GetEntryDefaultBody `json:"body,omitempty"`
}

// NewGetEntryDefault creates GetEntryDefault with default headers values
func NewGetEntryDefault(code int) *GetEntryDefault {
	if code <= 0 {
		code = 500
	}

	return &GetEntryDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the get entry default response
func (o *GetEntryDefault) WithStatusCode(code int) *GetEntryDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the get entry default response
func (o *GetEntryDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WithPayload adds the payload to the get entry default response
func (o *GetEntryDefault) WithPayload(payload *GetEntryDefaultBody) *GetEntryDefault {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get entry default response
func (o *GetEntryDefault) SetPayload(payload *GetEntryDefaultBody) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetEntryDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(o._statusCode)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
